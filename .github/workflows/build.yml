name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Start"

      - name: Checkout repository
        uses: actions/checkout@v4

      # ---- Arduino CLI fest pinnen (keine 'latest' Ãœberraschungen) ----
      - name: Install Arduino CLI (0.35.3)
        uses: arduino/setup-arduino-cli@v1
        with:
          version: 0.35.3

      # ---- Cache Core & Packages ----
      - name: Cache Arduino core & packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.arduino15/packages
            ~/.arduino15/staging
          key: ${{ runner.os }}-arduino-core-${{ hashFiles('**/firmware/**/*.ino') }}-esp32-2.0.17
          restore-keys: |
            ${{ runner.os }}-arduino-core-

      # ---- ESP32-Board-Paket installieren ----
      - name: Add ESP32 package index & core update
        run: |
          arduino-cli config init
          arduino-cli config add board_manager.additional_urls https://espressif.github.io/arduino-esp32/package_esp32_index.json
          arduino-cli core update-index
          arduino-cli core install esp32:esp32@2.0.17
          arduino-cli core list

      # ---- Cache externe Libraries ----
      - name: Cache Arduino libraries
        uses: actions/cache@v4
        with:
          path: |
            ~/Arduino/libraries
          key: ${{ runner.os }}-arduino-libs-${{ hashFiles('**/firmware/**/*.ino') }}-png-jpg-async
          restore-keys: |
            ${{ runner.os }}-arduino-libs-

      # ---- FIXED set of libraries (extern) ----
      - name: Install libraries (fixed set incl. TJpg_Decoder + PNGdec)
        run: |
          set -e
          arduino-cli lib install "AsyncTCP@1.1.1"
          arduino-cli lib install "ESP Async WebServer@3.6.0"
          arduino-cli lib install "Adafruit GFX Library@1.12.1"
          arduino-cli lib install "Adafruit ST7735 and ST7789 Library@1.11.0"
          arduino-cli lib install "Adafruit BusIO@1.17.2"
          arduino-cli lib install "TJpg_Decoder@1.1.0"
          arduino-cli lib install "PNGdec@1.1.4"
          # Core-integrierte Libs (FS, SPIFFS, Update, WiFi) kommen mit dem ESP32-Core, NICHT hier installieren.
          echo "==== LIB LIST ===="
          arduino-cli lib list

      # ---- Kompilieren aller .ino im Ordner firmware/ ----
      - name: Compile sketches in firmware/
        run: |
          set -e
          echo "==> Compiling: firmware/firmware.ino"
          arduino-cli compile \
            --fqbn esp32:esp32:esp32s2 \
            --warnings all \
            --output-dir build \
            firmware/firmware.ino

      # ---- Firmware-Artefakt hochladen ----
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-binaries
          path: |
            build/*.bin
            build/*.elf

      - name: Post Checkout repository
        if: always()
        run: git status

      - name: Complete job
        if: always()
        run: echo "Done"
