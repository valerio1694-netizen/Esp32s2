name: build

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Starting ESP32 build…"

      - name: Checkout repository
        uses: actions/checkout@v4

      # Feste CLI-Version (Fix für 'unable to get latest version')
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1
        with:
          version: 0.35.2

      - name: Cache Arduino core & packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.arduino15
          key: ${{ runner.os }}-arduino-core-${{ hashFiles('**/build.yml') }}
          restore-keys: ${{ runner.os }}-arduino-core-

      - name: Cache Arduino libraries
        uses: actions/cache@v4
        with:
          path: |
            ~/Arduino/libraries
          key: ${{ runner.os }}-arduino-libs-${{ hashFiles('**/firmware/**') }}
          restore-keys: ${{ runner.os }}-arduino-libs-

      - name: Add ESP32 package index & core update
        run: |
          arduino-cli config init
          arduino-cli config set board_manager.additional_urls https://espressif.github.io/arduino-esp32/package_esp32_index.json
          arduino-cli core update-index

      - name: Install ESP32 core (2.0.17)
        run: |
          arduino-cli core install esp32:esp32@2.0.17
          arduino-cli core list

      - name: Install libraries (fixed, inkl. TJpg_Decoder + PNGdec)
        run: |
          # Display-Stack
          arduino-cli lib install "Adafruit GFX Library@1.12.1"
          arduino-cli lib install "Adafruit ST7735 and ST7789 Library@1.11.0"
          arduino-cli lib install "Adafruit BusIO@1.17.2"

          # Async-Stack passend zu Core 2.0.17
          arduino-cli lib install "AsyncTCP@1.1.1"
          arduino-cli lib install "ESP Async WebServer@3.6.0"

          # JPEG Decoder
          if ! arduino-cli lib install "TJpg_Decoder" ; then
            echo "TJpg_Decoder not in index, cloning from GitHub…"
            mkdir -p ~/Arduino/libraries
            cd ~/Arduino/libraries
            if [ ! -d TJpg_Decoder ]; then
              git clone --depth=1 https://github.com/Bodmer/TJpg_Decoder.git
            fi
          fi

          # PNG Decoder
          arduino-cli lib install "PNGdec" || true

          # Optional/Standard
          arduino-cli lib install "SPI" || true

          arduino-cli lib list

      - name: Compile sketches in firmware/
        env:
          FQBN: esp32:esp32:esp32s2
        run: |
          set -e
          shopt -s nullglob
          mkdir -p build
          found=0
          for ino in $(find firmware -maxdepth 2 -type f -name "*.ino"); do
            found=1
            name=$(basename "$(dirname "$ino")")
            outdir="build/${name}"
            echo "==> Compiling: ${ino}  ->  ${outdir}"
            mkdir -p "${outdir}"
            arduino-cli compile \
              --fqbn "${FQBN}" \
              --warnings default \
              --build-path "${outdir}" \
              --export-binaries \
              "${ino}"
          done
          if [ $found -eq 0 ]; then
            echo "No .ino files found under firmware/"; exit 1
          fi

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-binaries
          path: |
            build/**/*.bin
            build/**/*.elf
          if-no-files-found: warn

      - name: Complete job
        run: echo "Build finished."
