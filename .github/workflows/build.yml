name: build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------- Arduino CLI stabil & robust installieren ----------
      - name: Install Arduino CLI (0.35.2)
        shell: bash
        run: |
          set -euo pipefail
          VER="0.35.2"
          mkdir -p "$HOME/.local/bin"
          TMP="$(mktemp -d)"
          cd "$TMP"
          curl -fsSL "https://downloads.arduino.cc/arduino-cli/arduino-cli_${VER}_Linux_64bit.tar.gz" -o cli.tgz
          tar -xzf cli.tgz
          # Binary finden (je nach Tarball-Layout)
          BIN=""
          if [[ -f "./arduino-cli" ]]; then
            BIN="./arduino-cli"
          elif [[ -f "./arduino-cli_${VER}_Linux_64bit/arduino-cli" ]]; then
            BIN="./arduino-cli_${VER}_Linux_64bit/arduino-cli"
          else
            BIN="$(find . -type f -name arduino-cli | head -n1)"
          fi
          test -n "$BIN" && install -m 755 "$BIN" "$HOME/.local/bin/arduino-cli"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          "$HOME/.local/bin/arduino-cli" version

      # ---------- Cache fÃ¼r Core, Pakete & Libraries ----------
      - name: Cache Arduino core & packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.arduino15
            ~/Arduino
          key: ${{ runner.os }}-arduino-${{ hashFiles('.github/workflows/build.yml') }}
          restore-keys: |
            ${{ runner.os }}-arduino-

      # ---------- ESP32 Core 2.0.17 ----------
      - name: Add ESP32 package index & core update
        shell: bash
        run: |
          set -euo pipefail
          arduino-cli config init --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
          arduino-cli core update-index
          arduino-cli core install esp32:esp32@2.0.17
          arduino-cli core list

      # ---------- Libraries (fixe Versionen, inkl. Decoder) ----------
      - name: Install libraries (fixed set incl. TJpg_Decoder + PNGdec)
        shell: bash
        run: |
          set -euo pipefail
          arduino-cli lib install "AsyncTCP@1.1.1"
          arduino-cli lib install "ESP Async WebServer@3.6.0"
          arduino-cli lib install "Adafruit GFX Library@1.12.1"
          arduino-cli lib install "Adafruit ST7735 and ST7789 Library@1.11.0"
          arduino-cli lib install "TJpg_Decoder"
          arduino-cli lib install "PNGdec"
          arduino-cli lib list

      # ---------- Kompilieren: alle .ino in ./firmware ----------
      - name: Compile sketches in firmware/
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p build
          shopt -s nullglob
          for ino in firmware/*.ino; do
            bn="$(basename "$ino" .ino)"
            echo "==> Compiling: $ino"
            arduino-cli compile \
              --fqbn esp32:esp32:esp32s2 \
              --warnings all \
              --build-path "build/${bn}" \
              "$ino"
          done

      # ---------- Artefakte ----------
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-binaries
          path: |
            build/**/**/*.bin
            build/**/**/*.elf
